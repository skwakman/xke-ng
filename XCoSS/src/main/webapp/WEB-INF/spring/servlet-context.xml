<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!-- Use @Controller and other annotations -->
	<mvc:annotation-driven />

	<mvc:interceptors>
		<bean id="webContentInterceptor" class="org.springframework.web.servlet.mvc.WebContentInterceptor">
			<property name="cacheSeconds" value="0" />
			<property name="useExpiresHeader" value="true" />
			<property name="useCacheControlHeader" value="true" />
			<property name="useCacheControlNoStore" value="true" />
		</bean>
	</mvc:interceptors>

	<!-- Handles requests for /static/** by retrieval from ${webappRoot}/static folder -->
	<mvc:resources mapping="/static/**" location="/static/" />

	<context:component-scan base-package="com.xebia.xcoss.web.controller" />
	<context:component-scan base-package="com.xebia.xcoss.rest.controller" />
	<context:component-scan base-package="com.xebia.xcoss.storage.dao" />
	<context:component-scan base-package="com.xebia.xcoss.logic.service" />

	<!-- Bean definitions -->

	<bean id="jaxbMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="classesToBeBound">
			<list>
				<value>com.xebia.xcoss.model.ConferenceList</value>
				<value>com.xebia.xcoss.model.Conference</value>
			</list>
		</property>
	</bean>

	<bean id="xml" class="org.springframework.web.servlet.view.xml.MarshallingView">
		<constructor-arg ref="jaxbMarshaller" />
	</bean>

	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="mediaTypes">
			<map>
				<entry key="xml" value="application/xml" />
				<entry key="html" value="text/html" />
			</map>
		</property>
		<property name="viewResolvers">
			<list>
				<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
				<bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
					<property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView" />
					<!-- property name="prefix" value="/WEB-INF/views/" / -->
					<!-- property name="suffix" value=".jsp" / -->
				</bean>
			</list>
		</property>
	</bean>

	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="definitions" value="/WEB-INF/tiles.xml" />
	</bean>

	<!-- Reads Messages to use in pages -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:messages" />
		<property name="cacheSeconds" value="1" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>

	<bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
		<property name="paramName" value="lang" />
	</bean>

	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
		<property name="defaultLocale" value="nl" />
	</bean>

	<bean id="handlerMapping" class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
		<property name="interceptors">
			<ref bean="localeChangeInterceptor" />
		</property>
	</bean>

</beans>
